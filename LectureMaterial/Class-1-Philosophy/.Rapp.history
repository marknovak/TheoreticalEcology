n<-4#
pB<-0.1#
pD<-0.1#
bd<-c(1,-1,0)#
#
p<-cumsum(c(pB,pD,1-pB-pD))#
#
T<-10#
for(in in 1:T){#
	d<-runif(n,0,1)#
	q<-sapply(d,function(x){x<p})#
	r<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[r]#
	n<-n+sum(P)#
}
n<-4#
pB<-0.1#
pD<-0.1#
bd<-c(1,-1,0)#
#
p<-cumsum(c(pB,pD,1-pB-pD))#
#
T<-10#
for(i in 1:T){#
	d<-runif(n,0,1)#
	q<-sapply(d,function(x){x<p})#
	r<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[r]#
	n<-n+sum(P)#
}
N<-vector(NA,length=T)
N<-rep(NA,length=T)
n<-4#
pB<-0.1#
pD<-0.1#
bd<-c(1,-1,0)#
#
p<-cumsum(c(pB,pD,1-pB-pD))#
#
T<-10#
N<-rep(NA,length=(T+1))#
N[1]<-n#
#
for(t in 2:T){#
	d<-runif(n,0,1)#
	q<-sapply(d,function(x){x<p})#
	r<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[r]#
	N[t]<-N[t-1]+sum(P)#
}
plot(N)
n<-4#
pB<-0.1#
pD<-0.01#
bd<-c(1,-1,0)#
#
p<-cumsum(c(pB,pD,1-pB-pD))#
#
T<-10#
N<-rep(NA,length=(T+1))#
N[1]<-n#
#
for(t in 2:T){#
	d<-runif(n,0,1)#
	q<-sapply(d,function(x){x<p})#
	r<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[r]#
	N[t]<-N[t-1]+sum(P)#
}#
plot(N)
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1 		# prob of Birth#
pD<-0.01 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1 		# prob of Birth#
pD<-0.01 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps)#
for(t in 2:T){#
	d<-runif(n,0,1)#
	q<-sapply(d,function(x){x<p})#
	r<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[r]	#
	N[r,t]<-N[r,t-1]+sum(P)#
}#
plot(N)
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.3 		# prob of Birth#
pD<-0.01 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps)#
for(t in 2:T){#
	d<-runif(n,0,1)#
	q<-sapply(d,function(x){x<p})#
	r<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[r]	#
	N[r,t]<-N[r,t-1]+sum(P)#
}#
plot(N)
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.5 		# prob of Birth#
pD<-0.01 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.5 		# prob of Birth#
pD<-0.01 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps)#
for(t in 2:T){#
	d<-runif(n,0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t]<-N[r,t-1]+sum(P)#
}#
plot(N)
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.5 		# prob of Birth#
pD<-0.01 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps)#
for(t in 1:T){#
	d<-runif(n,0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}#
plot(N)
matplot(N)
?matplot
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.8 		# prob of Birth#
pD<-0.01 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps)#
for(t in 1:T){#
	d<-runif(n,0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}#
matplot(N,type='l',col='grey')
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.8 		# prob of Birth#
pD<-0.01 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps)#
for(t in 1:T){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}#
matplot(N,type='l',col='grey')
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.2 		# prob of Birth#
pD<-0.01 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps)#
for(t in 1:T){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}#
matplot(N,type='l',col='grey')
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.2 		# prob of Birth#
pD<-0.01 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n
d<-runif(N[r,t],0,1)
pB<-0.6		# prob of Birth
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n
d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})
d=0..1
d=0.1
[
N[r,t+1]<-N[r,t]+sum(P)
t=
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.6		# prob of Birth#
pD<-0.01 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}}#
matplot(N,type='l',col='grey')
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.6		# prob of Birth#
pD<-0.0 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}}#
matplot(N,type='l',col='grey')
pD=0.2
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.6		# prob of Birth#
pD<-0.2 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n
q<-sapply(d,function(x){x<p})
s<-apply(q,2,function(x){min(which(x==TRUE))})
p
bd[s]
P<-bd[s]
sum(P)
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.6		# prob of Birth#
pD<-0.0 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n
P
r=2
for(t in 1:T){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}
for(r in 1:Reps){#
for(t in 1:T){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}}
matplot(N,type='l',col='grey')
matplot(t(N),type='l',col='grey')
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.6		# prob of Birth#
pD<-0.0 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}}#
matplot(t(N),type='l',col='grey')
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.6		# prob of Birth#
pD<-0.2 		# prob of Death#
T<-10 			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}}#
matplot(t(N),type='l',col='grey')
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.8		# prob of Birth#
pD<-0.1 		# prob of Death#
T<-100			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}}#
matplot(t(N),type='l',col='grey')
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death
1-pB-pD
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-10			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}}#
matplot(t(N),type='l',col='grey')
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-10			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}}#
matplot(t(N),type='l',col='grey')
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(!is.na(N[r,t]){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}}}#
matplot(t(N),type='l',col='grey')
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(!is.na(N[r,t]){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}}}#
matplot(t(N),type='l',col='grey')
is.na(N[r,t]
if(!is.na(N[r,t])
!is.na(N[r,t]
!is.na(N[r,t])
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}}}
N[r,t]!=0
s
d
N[r,t]
r
t
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n
r=1
t=1
(N[r,t]!=0)
d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)
t=2
if(N[r,t]!=0){#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-N[r,t]+sum(P)#
}}#
matplot(t(N),type='l',col='grey')
Reps<-10 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
matplot(t(N),type='l',col='grey')
Reps<-20 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
matplot(t(N),type='l',col='grey')
N
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
matplot(t(N),type='l',col='grey')
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
par(mfrow=c(1,2))#
matplot(t(N),type='l',col='grey')#
matplot(t(N),type='l',col='grey',log='y')
matplot(t(N),type='l',log='y')
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
par(mfrow=c(1,2))#
matplot(t(N),type='l',col='grey')#
matplot(t(N),type='l',log='y')
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
par(mfrow=c(1,2),las=2)#
matplot(t(N),type='l',col='grey')	#
	axis(4)#
matplot(t(N),type='l',log='y')#
	axis(4)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
par(mfrow=c(1,2),las=1)#
matplot(t(N),type='l',col='grey')	#
	axis(4)#
matplot(t(N),type='l',log='y')#
	axis(4)
xat<-seq(0,540,T)
xat<-seq(0,540,length=T)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=(T+1)#
par(mfrow=c(1,2),las=1)#
matplot(t(N),type='l',col='grey',ylab='Taxa')	#
	axis(4)#
matplot(t(N),type='l',log='y',ylab='Taxa')#
	axis(4)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=(T+1))#
par(mfrow=c(1,2),las=1)#
matplot(t(N),type='l',col='grey',ylab='Taxa')	#
	axis(4)#
matplot(t(N),type='l',log='y',ylab='Taxa')#
	axis(4)
dim(N)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=(T+1))#
par(mfrow=c(1,2),las=1)#
matplot(xat,t(N),type='l',col='grey',ylab='Taxa')	#
	axis(4)#
matplot(xat,t(N),type='l',log='y',ylab='Taxa')#
	axis(4)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=(T+1))#
par(las=1)#
matplot(xat,t(N),type='l',col='grey',ylab='Taxa',xlab='Time',axes=FALSE)#
	axis(1,at=xat,labels=rev(xat))#
	axis(2)#
	axis(4)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=(T+1))#
par(las=1)#
matplot(xat,t(N),type='l',col='grey',ylab='Taxa',xlab='Time',axes=FALSE)#
	axis(1,at=xat,labels=rev(xat))#
	axis(2)#
	axis(4)#
	box(lwd=1)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=(T+1))#
par(las=2)#
matplot(xat,t(N),type='l',col='grey',ylab='Taxa',xlab='Time',axes=FALSE)#
	axis(1,at=xat,labels=rev(xat))#
	axis(2)#
	axis(4)#
	box(lwd=1)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=(T+1)/2)#
par(las=2)#
matplot(xat,t(N),type='l',col='grey',ylab='Taxa',xlab='Time',axes=FALSE)#
	axis(1,at=xat,labels=rev(xat))#
	axis(2)#
	axis(4)#
	box(lwd=1)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=((T+1)/2)#
par(las=2)#
matplot(xat,t(N),type='l',col='grey',ylab='Taxa',xlab='Time',axes=FALSE)#
	axis(1,at=xat,labels=rev(xat))#
	axis(2)#
	axis(4)#
	box(lwd=1)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=((T+1)/2)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=((T+1)/2))#
par(las=2)#
matplot(xat,t(N),type='l',col='grey',ylab='Taxa',xlab='Time',axes=FALSE)#
	axis(1,at=xat,labels=rev(xat))#
	axis(2)#
	axis(4)#
	box(lwd=1)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=((T+1)/2))#
#
matplot(xat,t(N),type='l',col='grey',ylab='Taxa',xlab='Time',axes=FALSE)#
	axis(1,at=xat,labels=rev(xat))#
	axis(2)#
	axis(4)#
	box(lwd=1)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=((T+1)/2))
matplot(xat,t(N),type='l',col='grey',ylab='Taxa',xlab='Time',axes=FALSE)
matplot(t(N),type='l',col='grey',ylab='Taxa',xlab='Time',axes=FALSE)
axis(1,at=xat,labels=rev(xat))#
	axis(2)#
	axis(4)#
	box(lwd=1)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=((T+1)))#
xlab<-seq(0,540,length=((T+1)/2))#
matplot(t(N),type='l',col='grey',ylab='Taxa',xlab='Time',axes=FALSE)#
	axis(1,at=xlab,labels=rev(xlab))#
	axis(2)#
	axis(4)#
	box(lwd=1)
xat
xlab
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=((T+1)))#
xlab<-seq(0,540,length=((T+1)/2))#
par(las=1)#
matplot(t(N),type='l',col='grey',ylab='Taxa',xlab='Time',axes=FALSE)#
	axis(1,at=xlab,labels=rev(xlab))#
	axis(2)#
	axis(4)#
	box(lwd=1)
axis(1)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=((T+1)))#
xlab<-seq(0,540,length=((T+1)/2))#
par(las=1)#
matplot(xat,t(N),type='l',col='grey',ylab='Taxa',xlab='Time',axes=FALSE)#
	axis(1,at=xlab,labels=rev(xlab))#
	axis(2)#
	axis(4)#
	box(lwd=1)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=((T+1)))#
xlab<-seq(0,540,length=((T+1)/3))#
par(las=1)#
matplot(xat,t(N),type='l',col='grey',ylab='Taxa',xlab='Time',axes=FALSE)#
	axis(1,at=xlab,labels=rev(xlab))#
	axis(2)#
	axis(4)#
	box(lwd=1)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=((T+1)))#
xlab<-seq(0,540,length=((T+1)/4))#
par(las=1)#
matplot(xat,t(N),type='l',col='grey',ylab='Taxa',xlab='Time',axes=FALSE)#
	axis(1,at=xlab,labels=rev(xlab))#
	axis(2)#
	axis(4)#
	box(lwd=1)
Reps<-100 		# number of reps#
n<-1 			# starting number of species#
pB<-0.1109		# prob of Birth#
pD<-0.0295 	# prob of Death#
T<-25			# number of time steps#
bd<-c(1,-1,0)#
p<-cumsum(c(pB,pD,1-pB-pD))#
N<-array(NA,dim=c(Reps,T+1))#
N[,1]<-n#
#
for(r in 1:Reps){#
for(t in 1:T){#
	if(N[r,t]!=0)#
	d<-runif(N[r,t],0,1)#
	q<-sapply(d,function(x){x<p})#
	s<-apply(q,2,function(x){min(which(x==TRUE))})#
	P<-bd[s]	#
	N[r,t+1]<-max(0,N[r,t]+sum(P))#
}}#
#
xat<-seq(0,540,length=((T+1)))#
xlab<-seq(0,540,length=((T+1)/4))#
par(las=1)#
matplot(xat,t(N),type='l',col='grey',ylab='Richness',xlab='Time',axes=FALSE)#
	axis(1,at=xlab,labels=rev(xlab))#
	axis(2)#
	axis(4)#
	box(lwd=1)
1/6
2/7
1/8
2/20
2/10
length(z)
output
data.frame(output)
DerivMat(expr,vars,order=1)
parms<-list(a=2,b=3,c=4,d=5)
eval(x)
?eval
a<-x[1,1]
eval(x,parms)
order=1
evalq(a,parms)
evalq(D,parms)
evalq(D[2],parms)
?evalq
eval(2 ^ 2 ^ 3)#
mEx <- expression(2^2^3); mEx; 1 + eval(mEx)#
eval({ xx <- pi; xx^2}) ; xx
eval(a)
evalq(a)
eval(a,enclos=parms)
eval(a,parms)
?parse
deparse(D)
?get
substitue(a,parms)
substitute(a,parms)
substitute(D,parms)
?expand.grid
G
Dn(expr[1],vars[1]
D(expr,vars)
D(expr[1],vars[1])
vars
expr[1]
z<-x[1,1]
eval(z,parms)
with(parms,eval(z))
?with
within(z,parms)
within(parms,z)
within(parms,eval(z)
evalq(z,parms)
local(z,parms)
?assign
get('a',parms)
get('b',parms)
mget(c('a','b','c','d'))
mget(c('a','b','c','d'),parms)
get('c',parms)
names(parms)
get(names(parms),parms)
mget(names(parms),parms)
get(names(parms),envir=parms)
get('a')
environment(x,parms)
environment(x)<-parms
?lsoda
?new.env
e<-new.env
e
parms<-new.env()
parms$a
x
eval(quote(x[1,1]),parms)
x[1,1]
x[1]
unlist(x)
unlist(x[1])
x[1][[1]]
eval(x[1][[1]],parms)
eval(quote(x[1][[1]]),parms)
z<-z$1
z$
z<-z[1]
z[1]
q<-z[1][[1]]
eval(quote(q),parms)
DS
D
out
z
?substitute
substitute(quote(q),parms)
q[1]
q[2]
q[4]
eval(q,parms)
substitute(q,parms)
eval(substitute,q,parms)
eval(substitute(q,parms))
substitue(expression(q),parms)
substitute(expression(q),parms)
epression(q)
quote(q)
unquote(q)
eval(q)
substitute( a + b,            list(a = 1))
a
substitute( "a + b",            list(a = 1))
substitute( expression(a + b),            list(a = 1))
eval(substitute( expression(a + b),            list(a = 1)))
substitute(substitute(q,parms))
substitute(substitute(a+b,parms))
substitute(substitute(a+b,parms),list=y=x)
substitute(substitute(a+b,parms),list(y=x)
)
substitute_q(a+b,parms)
q
substitute_q(q,parms)
parm
parms
Taylor(expr,vars)
n=1
n=2
Dn(expr,1)
Dn(expression(a*x-b*x*x*y),1)
Dn(expression(a*x-b*x*x*y),'x',1)
Dn(expression(a*x-b*x*x*y),'x',2)
expr<-expression(a*x-b*x*x*y)
expr
quote(expr)
as.character(expr)
Dn(expression(a*x-b*x*x*y),'x',0)
o1
n
o
lapply(o,function(x){Dn(expr,'x',x)})
?lapply
vapply(o,function(x){Dn(expr,'x',x)},c(0,0))
vapply(o,function(x){Dn(expr,'x',x)},c(0,0,0))
sapply(o,function(x){Dn(expr,'x',x)})
unlist(sapply(o,function(x){Dn(expr,'x',x)}))
on
lapply(on,paste)
lapply(on,paste,collapse='')
do.call("paste", c(on, sep = "\t"))
do.call("paste", on)
source("/Users/marknovak/Dropbox/Research/R-Codes/Sent2R.txt",echo=TRUE)
